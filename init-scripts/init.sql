-- Car Listing Database Initialization Script
-- This runs when the container starts for the first time

-- Create schemas for organizing data
CREATE SCHEMA IF NOT EXISTS raw;
CREATE SCHEMA IF NOT EXISTS staging;
CREATE SCHEMA IF NOT EXISTS intermediate;
CREATE SCHEMA IF NOT EXISTS analytics;

-- Create the main car listings table in raw schema
-- This matches the structure of your CSV data
-- CREATE TABLE IF NOT EXISTS raw.car_listings (
--     id SERIAL PRIMARY KEY,
--     area TEXT,
--     body_type TEXT,
--     brand TEXT,
--     condition TEXT,
--     engine_capacity TEXT,
--     fuel_type TEXT,
--     kilometers_run TEXT,
--     listing_title TEXT,
--     model TEXT,
--     posted_on TEXT,
--     price TEXT,
--     registration_year TEXT,
--     sold_by TEXT,
--     subarea TEXT,
--     transmission TEXT,
--     trim_edition TEXT,
--     url TEXT,
--     views TEXT,
--     year_of_manufacture TEXT,
--     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
-- );

-- -- Create indexes for better query performance
-- CREATE INDEX IF NOT EXISTS idx_car_listings_brand ON raw.car_listings(brand);
-- CREATE INDEX IF NOT EXISTS idx_car_listings_model ON raw.car_listings(model);
-- CREATE INDEX IF NOT EXISTS idx_car_listings_area ON raw.car_listings(area);
-- CREATE INDEX IF NOT EXISTS idx_car_listings_condition ON raw.car_listings(condition);
-- CREATE INDEX IF NOT EXISTS idx_car_listings_posted_on ON raw.car_listings(posted_on);

-- -- Create a cleaned/staging table with proper data types
-- CREATE TABLE IF NOT EXISTS staging.car_listings_cleaned (
--     id SERIAL PRIMARY KEY,
--     area TEXT,
--     body_type TEXT,
--     brand TEXT,
--     condition TEXT,
--     engine_capacity_cc INTEGER,
--     fuel_type TEXT[],
--     kilometers_run INTEGER,
--     listing_title TEXT,
--     model TEXT,
--     posted_on DATE,
--     price_tk DECIMAL(12,2),
--     registration_year INTEGER,
--     sold_by TEXT,
--     subarea TEXT,
--     transmission TEXT,
--     trim_edition TEXT,
--     url TEXT,
--     views INTEGER,
--     year_of_manufacture INTEGER,
--     created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
--     raw_id INTEGER REFERENCES raw.car_listings(id)
-- );

-- -- Create indexes for the cleaned table
-- CREATE INDEX IF NOT EXISTS idx_cleaned_brand ON staging.car_listings_cleaned(brand);
-- CREATE INDEX IF NOT EXISTS idx_cleaned_model ON staging.car_listings_cleaned(model);
-- CREATE INDEX IF NOT EXISTS idx_cleaned_price ON staging.car_listings_cleaned(price_tk);
-- CREATE INDEX IF NOT EXISTS idx_cleaned_year ON staging.car_listings_cleaned(year_of_manufacture);
-- CREATE INDEX IF NOT EXISTS idx_cleaned_area ON staging.car_listings_cleaned(area);

-- -- Create analytics views for common queries
-- CREATE OR REPLACE VIEW analytics.brand_summary AS
-- SELECT 
--     brand,
--     COUNT(*) as total_listings,
--     AVG(price_tk) as avg_price,
--     MIN(price_tk) as min_price,
--     MAX(price_tk) as max_price,
--     AVG(views) as avg_views
-- FROM staging.car_listings_cleaned
-- WHERE price_tk > 0
-- GROUP BY brand
-- ORDER BY total_listings DESC;

-- CREATE OR REPLACE VIEW analytics.monthly_listings AS
-- SELECT 
--     DATE_TRUNC('month', posted_on) as month,
--     COUNT(*) as total_listings,
--     AVG(price_tk) as avg_price,
--     COUNT(DISTINCT brand) as unique_brands
-- FROM staging.car_listings_cleaned
-- WHERE posted_on IS NOT NULL
-- GROUP BY DATE_TRUNC('month', posted_on)
-- ORDER BY month DESC;

-- -- Create a function to clean and transform data from raw to staging
-- CREATE OR REPLACE FUNCTION staging.transform_car_listings()
-- RETURNS INTEGER AS $
-- DECLARE
--     processed_count INTEGER := 0;
-- BEGIN
--     -- Insert cleaned data from raw to staging
--     INSERT INTO staging.car_listings_cleaned (
--         area,
--         body_type,
--         brand,
--         condition,
--         engine_capacity_cc,
--         fuel_type,
--         kilometers_run,
--         listing_title,
--         model,
--         posted_on,
--         price_tk,
--         registration_year,
--         sold_by,
--         subarea,
--         transmission,
--         trim_edition,
--         url,